{"version":3,"file":"static/js/479.49af73af.chunk.js","mappings":"mQAIaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HASzBC,EAAQJ,EAAAA,EAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8FAOpBG,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,mSAiBrBM,EAAqBT,EAAAA,EAAAA,IAAUU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,4FAO/BQ,EAASX,EAAAA,EAAAA,OAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qS,UChC7BU,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,0BAGf,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAET,KAAM,GAAIU,MAAO,GAAIC,SAAU,IAChDC,SAXmB,SAAHC,EAAAC,GAAkD,IAA5Cd,EAAIa,EAAJb,KAAMU,EAAKG,EAALH,MAAOC,EAAQE,EAARF,SAAcI,EAASD,EAATC,UACrDZ,GAASa,EAAAA,EAAAA,IAAS,CAAEhB,KAAAA,EAAMU,MAAAA,EAAOC,SAAAA,KACjCM,QAAQC,IAAI,SACZH,GACF,EAQMI,iBAAkBtB,EAAOS,UAEzBD,EAAAA,EAAAA,MAACtB,EAAU,CAAAuB,SAAA,EACTD,EAAAA,EAAAA,MAACjB,EAAK,CAAAkB,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAACjB,EAAK,CAAC8B,KAAK,OAAOpB,KAAK,aAG1BK,EAAAA,EAAAA,MAACjB,EAAK,CAAAkB,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACjB,EAAK,CACJ8B,KAAK,QACLpB,KAAK,QACLqB,YAAY,+BAEdd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACtB,KAAK,QAAOM,SACvB,SAAAiB,GAAG,OAAIhB,EAAAA,EAAAA,KAACd,EAAkB,CAAAa,SAAEiB,GAAyB,QAG1DlB,EAAAA,EAAAA,MAACjB,EAAK,CAAAkB,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACjB,EAAK,CAAC8B,KAAK,WAAWpB,KAAK,cAC5BO,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACtB,KAAK,WAAUM,SAC1B,SAAAiB,GAAG,OAAIhB,EAAAA,EAAAA,KAACd,EAAkB,CAAAa,SAAEiB,GAAyB,QAG1DhB,EAAAA,EAAAA,KAACZ,EAAM,CAACyB,KAAK,SAAQd,SAAC,0BAKhC,C","sources":["pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\n\nexport const StyledForm = styled(Form)`\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: #0055b3;\n  font-weight: bold;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled(Field)`\n  position: relative;\n  width: 100%;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  outline: none;\n  margin-top: 15px;\n\n  :focus {\n    border-color: #007bff;\n    outline: none;\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  }\n`;\n\nexport const StyledErrorMessage = styled.div`\n  position: absolute;\n  color: #c82333;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  :hover,\n  :focus {\n    background-color: #0055b3;\n  }\n`;","import { register } from 'redux/auth/operations';\nimport { useDispatch } from \"react-redux\";\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  StyledForm,\n  Label,\n  Input,\n  Button,\n  StyledErrorMessage,\n} from './RegisterPage.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('It is required field'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = ({ name, email, password }, { resetForm }) => {\n    dispatch(register({ name, email, password }));\n    console.log('dcwew');\n    resetForm();\n  };\n  \n  return (\n    <div>\n      <h1>Register Page</h1>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmitForm}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" />\n          </Label>\n\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Example: example@mail.com\"\n            />\n            <ErrorMessage name=\"email\">\n              {msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n            </ErrorMessage>\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\">\n              {msg => <StyledErrorMessage>{msg}</StyledErrorMessage>}\n            </ErrorMessage>\n          </Label>\n          <Button type=\"submit\">Create account</Button>\n        </StyledForm>\n      </Formik>\n    </div>\n  );\n};\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","StyledErrorMessage","_templateObject4","Button","_templateObject5","schema","yup","shape","name","required","RegisterPage","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","email","password","onSubmit","_ref","_ref2","resetForm","register","console","log","validationSchema","type","placeholder","ErrorMessage","msg"],"sourceRoot":""}